{"posts":[{"title":"HazeDayIndex","text":"Cai et al., 2017, NCC 10.1038/nclimate3249 Haze weather index (HWI) Because V850, $\\Delta{T}$ and U500 are not independent, we normalized each time series by its respective standard deviation and summed the three normalized time series to construct a single index. Zhang et el., 2018, EP https://doi.org/10.1016/j.envpol.2018.08.019 Haze Day Index (HDI) Horton et al., 2014, NCC DOI: 10.1038/NCLIMATE2272 Air Stagnation Index (ASI) A grid cell day is considered stagnant when daily-mean near-surface (10-m) wind speeds are &lt;3.2 m s−1 , daily-mean mid-tropospheric (500 mb) wind speeds are &lt;13 m s−1 , and daily-mean precipitation accumulation is &lt;1 mm. Wang et al., 2018, BMAS doi:10.1175/BAMS-D-16-0301.1 air stagnation day","link":"/blog/2022/11/01/HazeDayIndex/"},{"title":"hexoguide","text":"Hexo 博客常见问题图片问题 参考 https://github.com/cocowool/hexo-image-link 安装hexo-image-link 新建新的页面（tags, categories, about）hexo new page tags 新建的页面出现在souce文件夹下，修改对应的index.md文件： 12345title: tagsdate: 2022-10-24 09:02:56index: truelayout: tagstype: tags ICARUS主题1234$ npm install hexo-theme-icarus$ hexo config theme icarus# 配置文件为 _config.icarus.yml# reference： https://ppoffice.github.io/hexo-theme-icarus/ 新建博客hexo new name 在Hexo中渲染MathJax数学公式在用markdown写技术文档时，免不了会碰到数学公式。常用的Markdown编辑器都会集成Mathjax，用来渲染文档中的类Latex格式书写的数学公式。基于Hexo搭建的个人博客，默认情况下渲染数学公式却会出现各种各样的问题。 原因Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签，比如在markdown语法中，下划线’_’代表斜体，会被渲染引擎处理为&lt;em&gt;标签。 因为类Latex格式书写的数学公式下划线 ‘_’ 表示下标，有特殊的含义，如果被强制转换为&lt;em&gt;标签，那么MathJax引擎在渲染数学公式的时候就会出错。例如，$x_i$在开始被渲染的时候，处理为$x&lt;em&gt;i&lt;/em&gt;$，这样MathJax引擎就认为该公式有语法错误，因为不会渲染。 类似的语义冲突的符号还包括’*’, ‘{‘, ‘}’, ‘\\’等。 解决方法解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的最靠谱的方法。 更换Hexo的markdown渲染引擎，hexo-renderer-kramed引擎是在默认的渲染引擎hexo-renderer-marked的基础上修改了一些bug，两者比较接近，也比较轻量级。 12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save 执行上面的命令即可，先卸载原来的渲染引擎，再安装新的。 然后，跟换引擎后行间公式可以正确渲染了，但是这样还没有完全解决问题，行内公式的渲染还是有问题，因为hexo-renderer-kramed引擎也有语义冲突的问题。接下来到博客根目录下，找到node_modules\\kramed\\lib\\rules\\inline.js，把第11行的escape变量的值做相应的修改： 12// escape: /^\\\\([\\\\`*{}\\[\\]()#$+\\-.!_&gt;])/, escape: /^\\\\([`*\\[\\]()#$+\\-.!_&gt;])/ 这一步是在原基础上取消了对\\,{,}的转义(escape)。 同时把第20行的em变量也要做相应的修改。 12// em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/, em: /^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/ 重新启动hexo（先clean再generate）,问题完美解决。哦，如果不幸还没解决的话，看看是不是还需要在使用的主题中配置mathjax开关。 在主题中开启mathjax开关如何使用了主题了，别忘了在主题（Theme）中开启mathjax开关，下面以next主题为例，介绍下如何打开mathjax开关。 进入到主题目录，找到_config.yml配置问题，把mathjax默认的false修改为true，具体如下： 1234# MathJax Supportmathjax: enable: true per_page: true 别着急，这样还不够，还需要在文章的Front-matter里打开mathjax开关，如下： 123456---title: index.htmldate: 2016-12-28 21:01:30tags:mathjax: true-- 不要嫌麻烦，之所以要在文章头里设置开关，是因为考虑只有在用到公式的页面才加载 Mathjax，这样不需要渲染数学公式的页面的访问速度就不会受到影响了。 Hexo博客设置文章加密今天给大家推荐一款适用于 Hexo 的静态博客加密插件：hexo-blog-encrypt，搭配此插件你可以写一些比较私密的博客，通过密码验证的方式让其他人不能随意浏览。 1、安装插件首先运行以下命令，安装设置密码所需要的插件： npm install hexo-blog-encrypt2、修改配置在根目录的配置文件_config.yml中添加以下代码： 12encrypt: enable: true 3、博客文章添加加密字段设置加密之后，不要忘记在新建博文的时候，在头部添加加密的设置信息，如下图： 12password: 密码message: 输入密码界面提示说明 Hexo gitee 搭建博客必须的软件：node.js node.js官方网站：http://nodejs.cn/download/ node.js阿里云镜像站：https://npm.taobao.org/mirrors/node/ Git Git官网(下载速度可能稍慢)：https://git-scm.com/ Git阿里云镜像站（推荐）：https://npm.taobao.org/mirrors/git-for-windows/ 可根据个人喜好替换的软件：Visual Studio Code 官方网站：https://code.visualstudio.com/Download typora 官方网站：https://www.typora.io/ 以上软件若你下载速度慢，可以在这篇文章底部找到我已经下载好了的国内链接，链接里不定期更新以上软件的版本（保证均从官网下载下来不做任何修改）。当然最好是自己去官网下，因为我懒，更新不会很频繁，除非你催我一下（发邮件或者其他什么的）…… 要用到的框架或平台：Hexo 官方网站：https://hexo.io/zh-cn/ Gitee（码云） 官方网站：https://gitee.com/ 安装说明node.js和Typora就不说了，这个灰常简单。 至于Git，它安装的时候选项挺多的，而且还都是洋文，看不懂的话就全部选 next 就行了。你要是非得搞明白它每个选项的意思，emmmm那建议你们自己去搜吧，网上一搜一大把。我反正是不知道每项的意思，（全是废话…）我也不想知道~/手动狗头 检验是否成功安装用 Win + R 打开运行，输入 cmd 并进入cmd窗口 node.js 的检查1node -v npm的检查NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题 1npm -v Git 的检查1git --version 以上有显示版本号，则说明安装成功 Hexo的安装1、安装之前可以先设置一下淘宝镜像加速器1npm install -g cnpm --registry=https://registry.npm.taobao.org 2、全局安装框架1npm install hexo-cli -g 3-1、创建你的博客目录1hexo init 你博客的文件夹名字 3-2、进入你博客的目录1cd 你博客的文件夹名字 4、复制文件到你博客的目录1npm install 5、安装Hexo部署插件请在你博客的目录下启动cmd，再执行以下代码 1npm install hexo-deployer-git --save Git的配置用 Win + R 打开运行，输入 cmd 并进入cmd 设置用户名称1git config --global user.name &quot;用户名&quot; 设置用户邮箱1git config --global user.email &quot;用户邮箱&quot; 生成密钥1ssh-keygen -t rsa -C &quot;用户邮箱&quot; 以上代码执行之后，会让你设置密码，推荐一个都不要设置，直接连按三次回车键。 博客 _config.yml 文件的配置打开你博客根目录的 _config.yml 文件，将一下信息添加到里面去。 1234567deploy: type: git repo: https://gitee.com/hcllmsx/hcllmsx.git #替换成你自己仓库的HTTP URL地址 branch: master 【注意区分】你博客根目录的 _config.yml 文件，和主题根目录的 _config.yml 文件！ Hexo常用代码1、清理缓存1hexo cl hexo cl 是 hexo clean 的简写 2、生成静态页面1hexo g hexo g 是 hexo generate 的简写 3、在本地映射（预览）1hexo s hexo s 是 hexo server 的简写 4、部署推送1hexo d hexo d 是 hexo deploy 的简写 5、以上连写示例一（清理缓存 + 生成静态页面 + 在本地预览）1hexo cl &amp;&amp; hexo g &amp;&amp; hexo s 6、以上连写示例二（清理缓存 + 生成静态页面 + 部署推送）1hexo cl &amp;&amp; hexo g &amp;&amp; hexo d 资源下载由于国内打开国外网站的速度有时候是看运气的，所以如果你下载很慢……可以选择下载我这里下载好的。另外，新建文章的通用模板也在里面，有了它可能会非（mei）常（you）方（luan）便（yong）。最后再再再再重申一次，尽量还是自己下载最新版，因为我更新挺懒的，除非你催我。 链接：https://msx.lanzoui.com/b0ewfyypa 密码：3t1u","link":"/blog/2022/10/23/hexoguide/"},{"title":"hexo备份","text":"Hexo博客如何备份到GithubHexo博客备份创建新分支在Github上博客仓库下创建一个新的分支hexo，并且将这个分支设置为默认分支，具体操作如下： 20220511_03.png 20220511_04.png 20220511_05.png 克隆hexo分支在本地把我们刚建的分支hexo克隆到本地： 20220511_06.png 把克隆下来的项目里面的.git文件复制到我们的Hexo博客目录下: 20220511_07.png 注意：如果之前搭建博客的时候自己更换过主题文件的，请把主题文件里面的.git文件删除。 开始备份进入到Blogs根目录下，执行如下命令： 123git add .git commit -m &quot;Blog源文件备份&quot;git push origin hexo 这时候我们会看到Github上的hexo 分支就有我们的源文件了。 20220511_08.png 如果你想要每次更改东西都希望备份到hexo 分支上，可以执行如下步骤： 12345hexo cleangit add .git commit -m &quot;备份&quot;git pushhexo g &amp; hexo d 如何恢复博客假如我们现在更换了电脑，希望在新的电脑上继续写博客，把Github上hexo分支上的项目克隆到本地（注意：是我们备份的那个分支） 进入到克隆下来的文件夹，执行如下命令： 12npm install hexo-clinpm install hexo-deployer-git 然后再去安装主题相关的插件即可，当然如果你电脑上还没有 Node.js等环境的话可能还需要去安装相关的环境。现在我们就基本上可以在另一台电脑上继续我们的博客之旅啦～","link":"/blog/2022/10/23/hexo%E5%A4%87%E4%BB%BD/"},{"title":"matplotlib example gallery","text":"折线图 散点图概率密度图 绘图细节设置","link":"/blog/2022/10/25/matplotlibexample/"},{"title":"numpy","text":"读取文件1234567891011# 经过pandas 读取后, 再写出,部分数据小数位数超长# 在read_csv时, 加入参数float_precision=“round_trip”, 所有数据会当做string读取, 使用时再进行相应的转换为floatdf = pd.read_csv('%s/%s_%s_%s.csv' %(outputdir, region, var, YYYYMM),float_precision=&quot;round_trip&quot;)# 读取csvpd.read_csv(&quot;filename&quot;,sep=',',header=None,index=False) # sep 分隔符, index 指定index列名obs = pd.read_csv(&quot;d04_chem.txt&quot;,delim_whitespace = True) # 空格分割# csv编码问题： VS code先用正确编码打开（GB…?），然后保存为正常编码（能正确显示GB…），然后重新保存为UTF-8格式，读取正常。# excel 常用的list 月份 1234months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']month = ['01','02','03','04','05','06','07','08','09','10','11','12'] 区域范围定义 1234567891011121314151617llcrnrlon,urcrnrlon,llcrnrlat, urcrnrlat = 113.,119., 34., 41. # NCPllcrnrlon,urcrnrlon,llcrnrlat, urcrnrlat = 119.,122., 30., 33. # YRDllcrnrlon,urcrnrlon,llcrnrlat, urcrnrlat = 112.,115.5,21.5,24. # PRDllcrnrlon,urcrnrlon,llcrnrlat, urcrnrlat = 103.,107., 28.5,31.5 # SCB# ref. Li et al., PNAS, 2017cornersdict = { 'BTH':[114.,118., 37., 41.], 'YRD':[118.,122., 30., 33.], 'PRD':[112.,115.5,21.5,24.], 'SCB':[103.5,107., 28.5,31.5]}cornersdict = { 'CEC': [112., 122., 30., 41.], # from Shah et al., 2020, ACP, central-eastern China 'NCP': [113.75, 118.75, 35., 41.], # from Zhai et al., 2021, NG 'YRD': [118., 122., 30., 33.], 'PRD': [112., 115.5, 21.5, 24.], 'SCB': [103.5, 107., 28.5, 31.5]} 排序 12345change['Region'] = change.indexlist_custom = ['337城市',&quot;京津冀及周边&quot;,&quot;汾渭平原&quot;, '长三角', &quot;成渝地区&quot;,&quot;珠三角&quot;]change['Region'] = change['Region'].astype('category')change['Region'].cat.reorder_categories(list_custom, inplace=True)change.sort_values('Region', inplace=True) 配色123456789101112131415cnames = {'EC': '$BC$','OM': '$OM$','SO4':'$SO_4^{2-}$','NO3':'$NO_3^{-}$','NH4':'$NH_4^{+}$','Cl': '$Cl$','Other':'$MI$'}cdict = {'EC': '#231916','OM': '#009e42','SO4':'#e51620','NO3':'#212d8c','NH4':'#ef9817','Cl': '#d84d95','Other':'#cbced2'} 指定顺序排序1234list_custom = ['337城市',&quot;京津冀及周边&quot;,&quot;汾渭平原&quot;, '长三角', &quot;成渝地区&quot;,&quot;珠三角&quot;]regiondata['Region'] = regiondata['Region'].astype('category')regiondata['Region'].cat.reorder_categories(list_custom, inplace=True)regiondata.sort_values('Region', inplace=True) 获取数据落在bins区间的索引 - 用于按照污染物等级统计分析123456levels = [0, 100, 160, 200, 1000]O3 = data[&quot;O3&quot;]inds = np.digitize(O3,bins = levels)for i in range(1,5): print(i, O3[inds==i].mean()) 合并数组12np.column_stack((a,b)) #作为列合并np.row_stack((a,b)) # 作为行 数据框添加数据1234567891011df = pd.concat([df,pd.DataFrame.from_records([{ &quot;a&quot;:amax, &quot;b&quot;:bmax, &quot;sdate&quot;:df.index[i], &quot;edate&quot;:df.index[i+tmax-1], 'CO' :df[&quot;CO&quot;].iloc[i:i+tmax].mean(), 'NO2':df[&quot;NO2&quot;].iloc[i:i+tmax].mean(), 'O3' :df[&quot;O3&quot;].iloc[i:i+tmax].mean(), &quot;PM2.5&quot;:df[&quot;PM2.5&quot;].iloc[i:i+tmax].mean(), 'SO2':df[&quot;SO2&quot;].iloc[i:i+tmax].mean()}])]) 拼接两段数据123456789101112131415161718192021222324252627282930data2 = f.loc['2017-06-01':'2017-08-30']data3 = f.loc['2017-09-01':'2017-11-30']data1 = f.loc['2017-03-01':'2017-05-31']data4 = f.loc['2017-01-01':'2017-02-28']data5 = f.loc['2017-12-01':'2017-12-31']data0 = pd.concat([data4,data5])pd.concat([read_json(i) for i in adcodes],ignore_index=True)&gt;&gt;&gt; a=np.array([[1,2,3],[4,5,6]])&gt;&gt;&gt; b=np.array([[11,21,31],[7,8,9]])&gt;&gt;&gt; np.concatenate((a,b),axis=0)array([[ 1, 2, 3], [ 4, 5, 6], [11, 21, 31], [ 7, 8, 9]])&gt;&gt;&gt; np.concatenate((a,b),axis=1) #axis=1表示对应行的数组进行拼接array([[ 1, 2, 3, 11, 21, 31], [ 4, 5, 6, 7, 8, 9]])ax.plot(pm25[0:59],data[0:59,10],'.',c='k',alpha=0.5,label='Winter')ax.plot(pm25[334:365],data[334:365,10],'.',c='k',alpha=0.5)ax.plot(pm25[59:151],data[59:151,10],'.',c='b',alpha=0.5,label='Spring')ax.plot(pm25[151:243],data[151:243,10],'.',c='g',alpha=0.5,label='Summer')ax.plot(pm25[243:334],data[243:334,10],'.',c='r',alpha=0.5,label='Autumn')winter = np.concatenate((arrs[0:59],arrs[334:365]),axis=0)spring = arrs[59:151]summer = arrs[151:243]autumn = arrs[243:334] 日期12345678910111213df = pd.read_csv(fname,index_col=&quot;datetime&quot;)df.index = pd.to_datetime(df.index,format=&quot;%Y-%m-%d&quot;)df.index.month # 获取月份df.index.year # 获取年份df.loc['2000-6-1':'2000-6-10'] # 切片df[df.index.month.isin([5, 6, 7, 8, 9, 10])] # 按月份切片# 时区转换df.index = pd.to_datetime(df.time,format=&quot;%Y-%m-%dT%H:%M:%S&quot;, utc=True)df.index.tz_convert('Asia/Shanghai') 某个月的开始和结束日期 123from dateutil.relativedelta import relativedeltastart = datetime.datetime.strptime(&quot;2017-%s-01&quot; %mon,&quot;%Y-%m-%d&quot;)end = start + relativedelta(months=+1) + datetime.timedelta(days=-1) 时区转换 1data.index = pd.to_datetime(data.index,format='%Y%j%H').tz_localize('UTC').tz_convert(&quot;Asia/Shanghai&quot;) 设置时间格式 1res.index = res.index.strftime('%Y-%m-%d') 常见1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859# 三维计算相关系数def pearsonr_2D(x, y): &quot;&quot;&quot;computes pearson correlation coefficient where x is a 1D and y a 2D array&quot;&quot;&quot; upper = np.sum((x - np.mean(x,axis=0)) * (y - np.mean(y, axis=0)), axis=0) lower = np.sqrt(np.sum(np.power(x - np.mean(x,axis=0), 2),axis=0) * np.sum(np.power(y - np.mean(y, axis=0), 2), axis=0)) rho = upper / lower return rhoA = np.array([[[1,3,4],[4,6,5]],[[5,7,8],[1,2,23]],[[3,9,4],[5,7,5]]])B = np.array([[[7,1,3],[14,4,2]],[[15,6,1],[6,7,91]],[[3,9,4],[5,7,5]]])c = pearsonr_2D(A,B)for i,region in enumerate(region): print(i,region)# 创建dataframe追加行数据df = pd.DataFrame(columns = [&quot;ebayno&quot;, &quot;p_sku&quot;, &quot;sale&quot;, &quot;sku&quot;]) #创建一个空的dataframe df = df.append(dframe1.loc[dframe1.p_sku == ps], ignore_index=True) #忽略索引,往dataframe中插入一行数据 df = df.append([{'site':site,'MB':mb,'NMB':nmb,'NME':nme,'r2':r2}],ignore_index=True)来自 &lt;http://blog.csdn.net/zn505119020/article/details/77324029&gt; 合并df = pd.concat([inputdf,classdf],axis=1)根据分组统计，对不同行操作gp_col = 'SITE'df_max = obs.groupby(gp_col)[species].max()df_min = obs.groupby(gp_col)[species2].min()插入列 insert（位置，列名，数据）df_max.insert(0,&quot;站点&quot;,sitename)DataFrame 切片操作，loc, ilocprint df.loc[1:3, ['total_bill', 'tip']]print df.loc[1:3, 'tip': 'total_bill'] print df.iloc[1:3, [1, 2]] print df.iloc[1:3, 1: 3]来自 &lt;https://blog.csdn.net/ly_ysys629/article/details/55224284&gt; 获取数据框列名print(df.columns) 获取数据框列df[&quot;column-name&quot;]选取行df[df[&quot;column-name&quot;]==&quot;spec-name&quot;]选取数据df.column[index]df.ix[0,1]列表转换成dataframedf = pd.DataFrame([w1_p,w2_p,w3_p,w4_p],index=['w1_pre','w2_pre','w3_pre','w4_pre'])修改dataframe的列名df.columns=['site','time','aqi','so2','no2','pm10','co','o3','pm2_5'] 查找12cname = allsite.query(&quot;Area == @city&quot;).iloc[0,4]cname = allsite.query(&quot;Area == '北京'&quot;).iloc[0,0] list 转 data frame12345keys = [&quot;price&quot;,&quot;toalAmount&quot;]values = [&quot;0.01&quot;,&quot;10000&quot;] d = dict(zip(keys,values))pd.DataFrame([dict(zip(columns,temp))],columns=columns,index=None) 等差数列1cticks = np.linspace(zmin, zmax, num=11, dtype=int) mask12345678910def regionmean(lat,lon,data,corners): llcrnrlon,urcrnrlon,llcrnrlat, urcrnrlat = corners mask = np.where((lat&lt;urcrnrlat)&amp;(lat&gt;llcrnrlat)&amp;(lon&lt;urcrnrlon)&amp;(lon&gt;llcrnrlon),1,0) if(len(data.shape)==3): mask3d = np.broadcast_arrays(mask[np.newaxis,:,:],data)[0] datamask = np.ma.masked_where(mask3d!=1, data) return np.nanmean(np.nanmean(datamask,axis=1),axis=1) else: datamask = np.ma.masked_where(mask!=1, data) return np.nanmean(datamask.flatten()) 对应元素运算123456a = np.array([[1, 2]])b = np.array([[2, 4]])r1 = a + b # [[3 6]]r2 = a - b # [[-1 -2]]r3 = a * b # [[2 8]]r4 = a / b # [[0.5 0.5]] 画图平滑1234567x = np.linspace(0,31,31); print(x)y = np.sum(data,axis=1)x_new = np.linspace(0,31,100)tck = interpolate.splrep(x,y)y_bspline = interpolate.splev(x_new,tck)ax2.plot(x,y,&quot;wo&quot;,ms=3)ax2.plot(x_new,y_bspline,'w-',linewidth=0.5)","link":"/blog/2022/10/23/numpy/"},{"title":"python安装","text":"requirements12345678910111213141516171819numpypandasxarrayCartopymatplotlib==3.2.2notebookcmapscyclerscipyseabornShapelyjupyterlabconda install --yes --file requirements.txtpip install https://github.com/j08lue/pycpt/archive/master.zip pycpt 导入cpt配色方案 GitHub - j08lue/pycpt: Python tools to load and handle cpt (GMT format) color maps for use with matplotlib, e.g. from cpt-city https://github.com/j08lue/pycpt jupyterlab 安装设置 安装miniconda conda install jupyterlab 复制一个快捷方式，修改成： C:\\Software\\conda\\python.exe C:\\Software\\conda\\cwp.py C:\\Software\\conda C:\\Software\\conda\\python.exe C:\\Software\\conda\\Scripts\\jupyter-lab-script.py “D:\\云文件\\代码\\python\\jupyter” 并且起始位置改成最后的那句 D:\\云文件\\代码\\python\\jupyter 生成配置文件 jupyter lab —generate-config 单独的浏览器窗口, 修改config文件中的 c.NotebookApp.browser = ‘C:/Program Files (x86)/Microsoft/Edge/Application/msedge.exe —app=%s’ c.NotebookApp.notebook_dir = ‘’ 安装拓展 打开jupyterlab，enable拓展 关闭jupyterlab，安装nodejs： conda install nodejs 安装拓展，如：jupyter labextension install @jupyterlab/toc 导出html 隐藏代码1jupyter nbconvert Fig1_obs.vs.pred.ipynb --no-input --to html 字体设置成Helvetica 下载Helvetica.ttf 文件 找到matplotlib文件位置 ```pythonimport matplotlibprint(matplotlib.matplotlib_fname())12345678- 把字体文件移动到 matplotlib/mpl-data/fonts/ttf- 修改 matplotlibrc文件 - ```python # 改成这样 Helvetica 在最前面 font.sans-serif : Helvetica, DejaVu Sans, Bitstream Vera Sans, Computer Modern Sans Serif, Lucida Grande, Verdana, Geneva, Lucid, Arial, Avant Garde, sans-serif 删除缓存文件 $ cd ~/.matplotlib` `$ rm fontlist* 123456789101112131415161718192021# 镜像设置## 临时使用pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package注意，simple 不能少, 是 https 而不是 http## 设为默认升级 pip 到最新的版本 (&gt;=10.0.0) 后进行配置：pip install pip -Upip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple如果您到 pip 默认源的网络连接较差，临时使用本镜像站来升级 pip：pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U## conda添加镜像 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud//pytorch/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ conda config --set show_channel_urls yes 1显示已经有的源 conda config --show channels 链接：https://www.jianshu.com/p/7e663bb0d904","link":"/blog/2022/10/25/pythoninstall/"},{"title":"折线图","text":"123456789101112131415161718192021222324252627282930313233343536fig, ax = plt.subplots(figsize=(3,2))args = {&quot;ms&quot;:2,&quot;lw&quot;:1.}x = np.linspace(0,30,31)ax.plot(x,s2data13,'b^--',**args)ax.plot(x,s2data17,'r^--',**args)ax.plot(x,s2data1713,'g^--',**args)ax.plot(data13,'b.-',**args)ax.plot(data17,'r.-',**args)ax.plot([],'k.-',label='OBS',**args)ax.plot([],'k^--',label='SIM',**args)mo,mp,bias,ME,MNB,MNE,MFB,MFE,NMB,NME,RMSE,R,IoA = evaluation(data13, s2data13)ax.text(0.99, 0.84, r&quot;$R=%4.2f,\\ NMB=%4.1f\\%%,\\ NME=%4.1f\\%%$&quot; % (R,NMB*100,NME*100), color='b', transform=ax.transAxes,ha='right',fontsize=6.)mo,mp,bias,ME,MNB,MNE,MFB,MFE,NMB,NME,RMSE,R,IoA = evaluation(data17, s2data17)ax.text(.99, 0.91, r&quot;$R=%4.2f,\\ NMB=%4.1f\\%%,\\ NME=%4.1f\\%%$&quot; % (R,NMB*100,NME*100), color='r', transform=ax.transAxes,ha='right',fontsize=6.)ax.text(.3, 0.84,'2013', color='b', transform=ax.transAxes,ha='right',fontsize=6.)ax.text(.3, 0.91,'2017', color='r', transform=ax.transAxes,ha='right',fontsize=6.)# ax.axhline(y=100,color='r',lw=0.5,ls='--',alpha=0.5)# ax.axhline(y=180,color='b',lw=0.5,ls='--',alpha=0.5)ax.axhline(y=150,color='k',lw=0.5,ls='--',alpha=0.5)ax.set_ylim(0,340)ax.yaxis.set_major_locator(MultipleLocator(50.))ax.yaxis.set_minor_locator(MultipleLocator(10.))ax.set_xticks(np.linspace(0,30,6))ax.set_xticks(np.linspace(0,30,31),minor=True)ax.set_xticklabels([&quot;01-01&quot;,&quot;01-07&quot;,&quot;01-13&quot;,&quot;01-19&quot;,&quot;01-25&quot;,&quot;01-31&quot;,])ax.legend(loc=2, frameon=False,ncol=1, handletextpad=0.3, labelspacing =0.3, handlelength=1.,fontsize=6)figname = f&quot;{homepath}/figures/CEC_regionmean.png&quot;plt.savefig(figname, dpi=300, bbox_inches='tight',pad_inches = 0.05, facecolor='w')","link":"/blog/2022/10/25/%E6%8A%98%E7%BA%BF%E5%9B%BE/"},{"title":"服务器管理","text":" 内容升级中...","link":"/blog/2022/10/25/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86/"},{"title":"概率密度图","text":"123456789101112131415161718192021222324252627282930y1 = orgdata[&quot;O3&quot;]y2 = dwedata[&quot;O3&quot;]config = { 'xtick.direction': 'in', 'xtick.major.size': 2, 'xtick.minor.size': 1, 'ytick.direction': 'in', 'ytick.major.size': 2, 'ytick.minor.size': 1, 'axes.labelpad': 2.0,}plt.rcParams.update(config)fig, ax = plt.subplots(1,1,figsize=(4,2))ax.hist(y1, 50, histtype='step', stacked=True, fill=False, density=True,label=[&quot;Obs.&quot;])ax.hist(y2, 50, histtype='step', stacked=True, fill=False, density=True,label=[&quot;De-weather&quot;])pmax = 0.02ax.set_yticks(np.linspace(0,pmax,5))ax.set_yticklabels(np.linspace(0,pmax*1000,5,dtype=int))ax.set_ylabel(r'$Probability\\ density\\ (\\times 10^{-3})$')ax.legend()ax.set_xlabel(r&quot;$O_{3}\\ concentrations\\ (\\mu g\\ m^{-3})$&quot;)figname = f&quot;{homepath}/figures/O3_pdf.png&quot;plt.savefig(figname, dpi=300, bbox_inches='tight',pad_inches = 0.05, facecolor='w')","link":"/blog/2022/10/25/%E6%A6%82%E7%8E%87%E5%AF%86%E5%BA%A6%E5%9B%BE/"},{"title":"概念图","text":"素材网站https://www.freepik.com/ PPT导出图片问题 修改注册表 计算机\\HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\16.0\\PowerPoint\\Options 在上面的路径下新建Dword(32位)，命名成 ExportBitmapResolution, 值改成10进制的600","link":"/blog/2022/10/25/%E7%BB%98%E5%9B%BE%E7%B4%A0%E6%9D%90/"},{"title":"matplotlib绘图细节设置","text":"导入相关库12345678910111213141516171819202122232425262728293031import pandas as pdimport matplotlib.pyplot as pltfrom matplotlib.mathtext import _mathtext as mathtextfrom matplotlib.pyplot import MultipleLocatormathtext.FontConstantsBase.sup1 = 0.5mathtext.FontConstantsBase.sub1 = 0.3mathtext.FontConstantsBase.sub2 = 0.3import warningswarnings.filterwarnings(&quot;ignore&quot;)config = { &quot;font.family&quot;: 'sans-serif', &quot;font.sans-serif&quot;: [&quot;Arial&quot;], &quot;font.size&quot;: 8, &quot;pdf.fonttype&quot; : 42, &quot;mathtext.fontset&quot;: &quot;custom&quot;, 'mathtext.rm' : 'Arial', &quot;mathtext.default&quot;: &quot;rm&quot;, 'xtick.direction': 'in', 'xtick.major.size': 2, 'xtick.minor.size': 1, 'xtick.major.pad': 2, 'ytick.direction': 'in', 'ytick.major.size': 2, 'ytick.minor.size': 1, 'ytick.major.pad': 2,}plt.rcParams.update(config) 通过kwargs给函数传递参数 好处：使代码简洁化，且能保持设置的一致性，推荐使用！！！ 12kwargs = {&quot;width&quot;:width,&quot;color&quot;:colors[0],&quot;lw&quot;:0.,&quot;ec&quot;:'k'}ax.bar(x+i*width*1.1,data0[:,i],hatch=hatchs[i],**kwargs) 坐标轴相关设置123456789101112131415161718192021222324252627282930313233# 设置坐标轴范围ax.set_ylim(0,100)ax.set_xlim(0,100)# 设置坐标轴ticks## 手动设置labels和ticks位置ax.set_xticks([1,2,3,4])ax.set_xticklabels([&quot;2013 &quot;,&quot;Mete&quot;,&quot;Emis&quot;,&quot; 2017&quot;],rotation=0.,fontsize=6)ax.set_yticks(np.linspace(0,60,4,dtype=&quot;int&quot;))ax.set_yticklabels(np.linspace(0,60,4,dtype=&quot;int&quot;))## 隐藏ticksax.set_xticks([])# 设置主、次要ticks (几种方法)## 手动设置from matplotlib.pyplot import MultipleLocatorax.yaxis.set_minor_locator(MultipleLocator(5))ax.yaxis.set_major_locator(MultipleLocator(25))## 手动设置ax.set_xticks(np.linspace(0,30,6))ax.set_xticks(np.linspace(0,30,31),minor=True)## 自动生成ax.minorticks_on()# 关闭坐标轴ax.set_axis_off()# 隐藏坐标轴，设置线条粗细，一般不需要ax.get_xaxis().set_visible(False)ax.spines['top'].set_visible(False)ax.spines['bottom'].set_visible(True) # 可见axi.spines['bottom'].set_linewidth(0.5) # 线条粗细axi.spines['left'].set_linewidth(0.5) 图例设置12345678910111213141516171819202122232425262728293031## 添加legend - 自动生成ax4.legend(frameon =False, # 边框 ncol=6, # 列数量 loc=2, # 位置 # loc=[0.5, 0.5], # 位置 handletextpad =0.3, # handle和文字距离 columnspacing=0.5, # 列间距 labelspacing=0.1, # 行间距 handlelength=1., ) # handle长度## 添加legend - 手动设置n1,n2 = [],[]cat_order = [' 0-12 h', '12-24 h', '24-36 h', '36-48 h', '48-60 h','60-72 h','72-84 h', '84-96 h', '96-108 h', '&gt;108 h']for i in range(10): n1.append(axs[-1].bar(0, 0,color=colors[i]))l1 = axs[-1].legend(n1,cat_order,loc=[0.08, -0.05], frameon=False, ncol=3, handletextpad=0.1, columnspacing=0.8, handlelength=1.,prop={'size':5})for i in range(3): n2.append(axs[-1].bar(0, 0,color=&quot;#dadada&quot;, hatch=hatchs[i]*2))l2 = axs[-1].legend(n2, ['M13E13','M17E13','M17E17'], loc=[0.08,0.8], frameon=False, ncol=3, handletextpad=0.1, columnspacing=0.5, handlelength=1.,prop={'size':5})axs[-1].add_artist(l1)## pandas或者seaborn画图，删除默认的legendax.get_legend().remove()## 填色图的图例 - colorbar - 需要自己改改l, b, w, h = ax1.get_position().boundsb, h = 0.09, 0.12position=fig.add_axes([l+0.02, b, 0.16, h/10]) #位置[左,下,长，高]cbar = plt.colorbar(cs1,cax=position,orientation=&quot;horizontal&quot;)cbar.ax.tick_params(axis='x', direction='in',length=10,labelsize=15)cticks= np.linspace(zmin, zmax, num=11, dtype=int); cbar.set_ticks(cticks); cbar.set_ticklabels(cticks) 添加文字说明1234567891011# 添加文字## 一般用于子图中ax.text(-0.18,0.95,&quot;(b)&quot;,transform=ax.transAxes,fontsize=10,fontweight=&quot;bold&quot;)## 整体画布中使用fig.text(0.5,0,r&quot;$PM_{2.5}\\ concentrations\\ (\\mu g\\ m^{-3})$&quot;,ha=&quot;center&quot;)# 标题 ## 坐标轴标题ax.set_ylabel(r'$Probability\\ density\\ (\\times 10^{-3})$')## 主标题，通过y改变位置ax.set_title(title,y=0.85) 添加辅助线和阴影区域12345678910# 横、竖线条ax.axvline(x=150,c=&quot;k&quot;,lw=0.2,ls=&quot;-&quot;)ax.axhline(y=150,c=&quot;k&quot;,lw=0.2,ls=&quot;-&quot;)# 竖的阴影区域，如用于标记污染天、夜间kwargs = {&quot;alpha&quot;:0.5,&quot;color&quot;:&quot;grey&quot;,&quot;ec&quot;:None}ax.axvspan(x[0], x[snight],**kwargs )for i in range(ndays-1): ax.axvspan(x[enight+i*24],x[snight+24+i*24],**kwargs) ax.axvspan(x[enight+(ndays-1)*24],x[-1],**kwargs) 添加right-y-axis1234567axw = ax.twinx()## 设置一个特定颜色rycolor = '#ae24d1'kwargs = {&quot;ms&quot;:1,&quot;c&quot;:rycolor}axw.plot(x,y,**kwargs)axw.tick_params(axis='y', colors=rycolor)axw.spines['right'].set_color(rycolor) 颜色设置12345678910111213141516171819## 改变默认的颜色循环import matplotlib as mplmpl.rcParams['axes.prop_cycle'] = mpl.cycler(color = [&quot;#0073C2FF&quot;,&quot;#EFC000FF&quot;,&quot;#868686FF&quot;,&quot;#CD534CFF&quot;,&quot;7AA6DCFF&quot;,&quot;#003C67FF&quot;,&quot;#8F7700FF&quot;,&quot;#3B3B3BFF&quot;,&quot;#A73030FF&quot;])## 从colormap中提取几个颜色from mycolorpy import colorlist as mcpcolors=mcp.gen_color(cmap=&quot;Blues&quot;,n=11)### 或者import cmapscolors = cmaps.MPL_Dark2.colors[::-12,:] colors = colors[0:10,:]colors = colors[::-1,:]## 自己设计colormap （类似于在gnuplot中的设置，根据nodes的位置[0-1]来指定设置颜色）from matplotlib.colors import LinearSegmentedColormapcolors = [&quot;white&quot;, &quot;#e9e9fc&quot;, &quot;blue&quot;, &quot;green&quot;,&quot;yellow&quot;,&quot;red&quot;]nodes = [0.0, 0.01, 0.1, 0.25, 0.5, 1.0]mycmap = LinearSegmentedColormap.from_list(&quot;mycmap&quot;, list(zip(nodes, colors))) color = [&quot;#0073C2FF&quot;,&quot;#EFC000FF&quot;,&quot;#868686FF&quot;,&quot;#CD534CFF&quot;,&quot;7AA6DCFF&quot;,&quot;#003C67FF&quot;,&quot;#8F7700FF&quot;,&quot;#3B3B3BFF&quot;,&quot;#A73030FF&quot;] 创建子图123456789101112131415161718192021222324252627282930313233343536373839# 规则的子图 （n, m）## 方法1 - subplots 基本版fig, axs= plt.subplots(4,3,figsize=(5,5),sharex=False,sharey=False)fig.subplots_adjust(hspace=0.1,wspace=0.2)axs = axs.flatten()## 方法2 - gridspecimport matplotlib.gridspec as gridspecfig = plt.figure(figsize=(6,2))gs = gridspec.GridSpec(nrows=2, ncols=1, height_ratios=[1.4,2])fig.subplots_adjust(hspace=0.,wspace=0.28)ax1 = fig.add_subplot(gs[0,:])ax2 = fig.add_subplot(gs[1,:])axs = [ax1,ax2]# 不规则的子图 （n, m）## 方法3 - subplots 进阶版fig = plt.figure(figsize=(8, 6))ax1= fig.add_subplot(3,3,1)ax2= fig.add_subplot(3,3,2)ax3= fig.add_subplot(3,3,4)ax4= fig.add_subplot(3,3,5)ax5= fig.add_subplot(3,3,7)ax6= fig.add_subplot(3,3,8)ax7= fig.add_subplot(2,3,3)ax8= fig.add_subplot(2,3,6)## 方法4 - subplot2grid - 方法3间隔较大，个人认为方法4更好fig = plt.figure()fig.set_figheight(6); fig.set_figwidth(6)ax1 = plt.subplot2grid((3, 6), (0, 0), colspan=2)ax2 = plt.subplot2grid((3, 6), (0, 2), colspan=2)ax3 = plt.subplot2grid((3, 6), (0, 4), colspan=2)ax4 = plt.subplot2grid((3, 6), (1, 0), colspan=2)ax5 = plt.subplot2grid((3, 6), (1, 2), colspan=2)ax6 = plt.subplot2grid((3, 6), (1, 4), colspan=2)ax7 = plt.subplot2grid((3, 6), (2, 0), colspan=3)ax8 = plt.subplot2grid((3, 6), (2, 3), colspan=3) 画图字体设置 SCI投稿推荐使用 Arial字体（一般都有） 下载字体https://www.download-free-fonts.com 复制到matplotlib对应字体目录下/r008/xdxie/software/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf，删除home目录下的.cache/matplotlib文件夹，添加下面的语句，就可以了 12345678910111213import matplotlib.font_manager as font_managerfontpath = &quot;/r008/xdxie/software/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/times new roman.ttf&quot;prop = font_manager.FontProperties(fname=fontpath)plt.rcParams['font.family'] = prop.get_name()import matplotlib.pyplot as plt plt.rcParams['font.sans-serif'] = ['SimHei']#用来显示中文标签plt.rcParams['axes.unicode_minus'] = False#用来正常显示负号# 单独设置text字体ax.text(116.0,40.25, u'北京',fontfamily=prop.get_name())# windows下字体目录 C:/windows/fonts 中文字体解决方案 1. 查看matplotlib字体位置 1234567pythonimport matplotlib print(matplotlib.matplotlib_fname())#记录下来，字体位置我的是：/home/ruanjianlaowang/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrcexit() 2. 上传字体到服务器 123cd /home/ruanjianlaowang/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf通过ftp或者其他方式，将字体传上去，我们传的是：simhei.ttf 3. 删除字体缓存 12cd ~/.cache/matplotlibrm -rf * 4. 重启python应用 1nohup python k-means.py &amp; 说明： 假如还没生效，再更改个配置文件试试。（我们以前没更改这个配置文件，但是这次发生了个插曲，这次用的jmeter测试，一直还是乱码，后来改了这个还是不行，原来是jmeter的问题） 12345cd /home/ruanjianlaowang/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-datavi matplotlibrc font.family : sans-serif #去掉前面的#font.serif : simhei, DejaVu Serif, #新加了simhei 计算统计参数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950def evaluation(obs,sim): ''' sim: prediction, n-D np.array obs: observation, n-D np.array Assume the first dimension is time, deal with time dimension NOTE: users should set cut off value for MNB and MNE: As for O3 1h and 8h evaluation: [ozone] &gt; 40 or 60 ppb is suggested by EPA, but 30 ppb is used in J.L. Hu (2016) ''' N = obs.shape[0] # mean observation mo = np.nanmean(obs,axis=0) # mean prediction mp = np.nanmean(sim,axis=0) error = sim - obs # bias error (B) / mean bias (MB) / Bias bias = np.nansum(error,axis=0)/N # Gross Error (E/GE) / Mean Absolute Error (MAE) / Mean Error (ME) ME = np.nansum(np.abs(error),axis=0)/N # Mean Normalized Bias (MNB) | range(-100% to +++) | NOTE What happend if obs .eq. zero??? MNB = np.nansum(error/obs,axis=0)/N # Mean Normalized Error (MNE) | range(0 to +++) | NOTE What happend if obs .eq. zero??? MNE = np.nansum(np.abs(error/obs),axis=0)/N # Mean Fractional Bias (MFB) | range(-200% to +200%) | NOTE What happend if (obs+sim) .eq. zero??? MFB = np.nansum(error/(sim+obs)*2.,axis=0)/N # Mean Fractional Error (MFE) | range(0 to +200%) | NOTE What happend if (obs+sim) .eq. zero??? MFE = np.nansum(np.abs(error)/(sim+obs)*2.,axis=0)/N # Normalized Mean Bias (NMB) | range(-100% to +++) NMB = np.nansum(error,axis=0)/np.nansum(obs,axis=0) # Normalized Mean Error (NME) | range(0 to +++) | NME = np.nansum(np.abs(error),axis=0)/np.nansum(obs,axis=0) # Root Mean Square Error (RMSE) RMSE = np.sqrt(np.nansum(np.square(error),axis=0)/N) # correlation coefficient (R) coef = ma.corrcoef(ma.masked_invalid(obs), ma.masked_invalid(sim)); R = coef[0,1] # Index of Agreement (IoA) IoA = 1 - np.nansum(np.square(error),axis=0)/np.nansum(np.square(np.abs(sim-mo)+np.abs(obs-mo)),axis=0) return mo,mp,bias,ME,MNB,MNE,MFB,MFE,NMB,NME,RMSE,R,IoA","link":"/blog/2022/10/25/%E7%BB%98%E5%9B%BE%E7%BB%86%E8%8A%82%E8%AE%BE%E7%BD%AE/"}],"tags":[{"name":"haze","slug":"haze","link":"/blog/tags/haze/"},{"name":"meteoroogy","slug":"meteoroogy","link":"/blog/tags/meteoroogy/"},{"name":"other","slug":"other","link":"/blog/tags/other/"},{"name":"visualization","slug":"visualization","link":"/blog/tags/visualization/"},{"name":"data analysis","slug":"data-analysis","link":"/blog/tags/data-analysis/"},{"name":"software","slug":"software","link":"/blog/tags/software/"},{"name":"reach","slug":"reach","link":"/blog/tags/reach/"}],"categories":[{"name":"paper","slug":"paper","link":"/blog/categories/paper/"},{"name":"hexo","slug":"hexo","link":"/blog/categories/hexo/"},{"name":"example","slug":"example","link":"/blog/categories/example/"},{"name":"python","slug":"python","link":"/blog/categories/python/"},{"name":"linux","slug":"linux","link":"/blog/categories/linux/"}],"pages":[{"title":"赋得古原草送别","text":"离离原上草，一岁一枯荣。 野火烧不尽，春风吹又生。 远芳侵古道，晴翠接荒城。 又送王孙去，萋萋满别情。","link":"/blog/about/index.html"},{"title":"categories","text":"","link":"/blog/categories/index.html"},{"title":"tags","text":"","link":"/blog/tags/index.html"},{"title":"Gallery","text":"matplotlib example gallery - Hi there. (xiaodongnju.github.io) 折线图散点图概率密度图绘图细节设置","link":"/blog/example/index.html"}]}